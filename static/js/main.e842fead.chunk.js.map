{"version":3,"sources":["component/App3_Child1.js","routes/Home.js","routes/About.js","routes/Detail.js","component/Navigation.js","App3.js","index.js"],"names":["Movie","id","year","title","summary","medium_cover_image","genres","className","src","alt","to","pathname","state","map","result","index","key","slice","Home","isLoad","movies","getMovies","a","async","Axios","get","data","console","log","setState","callback","this","React","Component","About","Detail","props","location","history","undefined","alert","push","Navigation","App3","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"0SAgDeA,MAzCf,YAA0E,IAAzDC,EAAwD,EAAxDA,GAAIC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,MAAOC,EAAuC,EAAvCA,QAASC,EAA8B,EAA9BA,mBAAoBC,EAAU,EAAVA,OAC3D,OAAQ,yBAAKC,UAAU,SACX,yBAAKC,IAAKH,EAAoBI,IAAKN,IACnC,yBAAKI,UAAU,eACf,kBAAC,IAAD,CAAMG,GAAI,CACNC,SAAS,UAAD,OAAYV,GACpBW,MAAO,CACHV,KAAMA,EACNC,MAAOA,EACPC,QAASA,EACTC,mBAAoBA,EACpBC,OAAQA,KAGhB,wBAAIC,UAAU,eAAeJ,IAE7B,wBAAII,UAAU,cAAcL,GAC5B,wBAAIK,UAAU,gBACTD,EAAOO,KAAK,SAACC,EAAQC,GAAT,OAAoB,wBAAIC,IAAKD,GAAQD,OAItD,uBAAGP,UAAU,iBACRH,EAAQa,MAAM,EAAG,SCwCvBC,E,2MA/DXN,MAAQ,CACJO,QAAQ,EACRC,OAAQ,I,EAGZC,UAAY,4BAAAC,EAAAC,OAAA,kEAAAD,EAAA,MAS8BE,IAAMC,IAAI,6DATxC,gBASYL,EATZ,EASDM,KAAMA,KAAON,OACpBO,QAAQC,IAAIR,GAEZ,EAAKS,UAAS,SAAAC,GAAQ,MAAK,CAACV,SAAQD,QAAQ,MAZpC,sC,mFAmBRY,KAAKV,c,+BAIA,MAIqBU,KAAKnB,MAAxBO,EAJF,EAIEA,OAAQC,EAJV,EAIUA,OACf,OAAS,6BAASb,UAAU,aACfY,EACD,yBAAKZ,UAAU,WACX,0BAAMA,UAAU,gBAAhB,yCAGJ,yBAAKA,UAAU,UACVa,EAAOP,KAAI,SAAAC,GAER,OADAa,QAAQC,IAAId,GACL,kBAAC,EAAD,CAAOE,IAAKF,EAAOb,GACtBA,GAAIa,EAAOb,GACXC,KAAMY,EAAOZ,KACbC,MAAOW,EAAOX,MACdC,QAASU,EAAOV,QAChBC,mBAAoBS,EAAOT,mBAC3BC,OAAQQ,EAAOR,kB,GAlD5B0B,IAAMC,WCCVC,MAJf,WACI,OAAO,oFC0BIC,E,4LAnBS,MAGcJ,KAAKK,MAA3BC,EAHQ,EAGRA,SAAUC,EAHF,EAGEA,aACIC,IAAnBF,EAASzB,QACR4B,MAAM,wEACNF,EAAQG,KAAK,Q,+BAGX,IACCJ,EAAYN,KAAKK,MAAjBC,SACP,YAAsBE,IAAnBF,EAASzB,MACD,8BAAOyB,EAASzB,MAAMT,OAEtB,S,GAhBE6B,IAAMC,WC+DZS,MApEf,WAEI,OAAQ,6BAKI,kBAAC,IAAD,CAAMhC,GAAI,CAACC,SAAS,MAAM,uDAC1B,kBAAC,IAAD,CAAMD,GAAG,UAAS,+DCenBiC,MAff,WACI,OAKI,kBAAC,IAAD,KACI,kBAAC,EAAD,MADJ,IAEI,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAW5B,IACxC,kBAAC,IAAD,CAAO0B,KAAK,SAASE,UAAWZ,IAChC,kBAAC,IAAD,CAAOU,KAAK,aAAaE,UAAWX,MCPhDY,IAASC,OAAO,kBAAC,EAAD,MAAUC,SAASC,eAAe,W","file":"static/js/main.e842fead.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropsTypes from 'prop-types';\r\nimport '../css/App3_Child1.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\n//자식Ccomponent로 사용할 js는 클래스로 사용할 필요가 없다\r\nfunction Movie( {id, year, title, summary, medium_cover_image, genres} ) { //genres추가\r\n    return (<div className=\"movie\">\r\n                <img src={medium_cover_image} alt={title}></img>\r\n                <div className=\"movie_inner\">\r\n                <Link to={{\r\n                    pathname: `/movie/${id}`,\r\n                    state: {\r\n                        year: year,\r\n                        title: title,\r\n                        summary: summary,\r\n                        medium_cover_image: medium_cover_image,\r\n                        genres: genres\r\n                    }\r\n                }}>{/*타이틀을 a링크(Link)로 감싸고 파라미터를 넘기는 방법*/}\r\n                <h3 className=\"movie_title\">{title}</h3>\r\n                </Link>\r\n                <h3 className=\"movie_year\">{year}</h3>\r\n                <ul className=\"movie_genres\">\r\n                    {genres.map( (result, index) => (<li key={index}>{result}</li>) )\r\n                    //props로 넘어온 genres를 회전시킴\r\n                    }\r\n                </ul>\r\n                <p className=\"movie_summary\">\r\n                    {summary.slice(0, 140) //문자열 자르기로 보여지는 텍스트를 줄임\r\n                    }\r\n                </p>\r\n                </div>\r\n            </div>\r\n         \r\n         )\r\n}\r\n\r\nMovie.propTypes = {\r\n    id: PropsTypes.number.isRequired,\r\n    year: PropsTypes.number.isRequired,\r\n    title: PropsTypes.string.isRequired,\r\n    summary: PropsTypes.string.isRequired,\r\n    medium_cover_image: PropsTypes.string.isRequired,\r\n    genres: PropsTypes.arrayOf(PropsTypes.string).isRequired //추가\r\n};\r\n\r\nexport default Movie;","import React from 'react';\r\nimport Axios from 'axios';\r\n//import Movie from './App2_Child1'; //자식클래스로 사용할 컴포넌트를 임포트\r\nimport Movie from '../component/App3_Child1';\r\n\r\nclass Home extends React.Component {\r\n\r\n    state = {\r\n        isLoad: true,\r\n        movies: []\r\n    }\r\n    \r\n    getMovies = async () => { // async는 이 함수는 비동기야 await가 끝날떄 까지 기다려줘! 라는 것을 의미한다\r\n        //npm i axios 설치\r\n        \r\n        //script문법\r\n        //const result = await Axios.get(\"https://yts-proxy.now.sh/list_movies.json\"); //await은 Axios가 끝날떄 까지 기다려줘를 의미함\r\n        //console.log(result.data.data.movies);\r\n        \r\n        //ex6문법\r\n        //?sort_by=rating은 정렬을 의미함 api문서에서 확인\r\n        const {data:{data: {movies}}} = await Axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\"); //await은 Axios가 끝날떄 까지 기다려줘를 의미함\r\n        console.log(movies);\r\n\r\n        this.setState(callback => ({movies, isLoad: false}) ); //setState를 이용해서 state의 데이터값 저장, 로딩여부를 false\r\n    }\r\n    \r\n    componentDidMount() { //첫번째 랜더가 끝나고 실행되는 리엑트함수\r\n        // setTimeout(() => {\r\n        //     this.setState(callback => ({isLoad: false, test: false}) ); //test변수를 state에 마음대로 추가하더라도 괜찮다\r\n        // }, 6000);\r\n        this.getMovies();\r\n        \r\n    }\r\n\r\n    render() {\r\n        //const {isLoad} = this.state;\r\n        //return <div>{isLoad ? \"로딩중\" : \"로딩이 끝났습니다\"}</div>;\r\n        \r\n        const {isLoad, movies } = this.state;\r\n        return  (<section className=\"container\">\r\n                    {isLoad ? (\r\n                    <div className=\"loading\">\r\n                        <span className=\"loading_text\">로딩중입니다</span>\r\n                    </div>\r\n                    ) : (\r\n                    <div className=\"movies\">\r\n                        {movies.map(result => { //movies배열의 키값들을 Movie Prop으로 전달한다. \r\n                            console.log(result); //Movie에서는 타이틀을 리턴해주고 화면에 출력된다\r\n                            return <Movie key={result.id}\r\n                                id={result.id}\r\n                                year={result.year}\r\n                                title={result.title}\r\n                                summary={result.summary}\r\n                                medium_cover_image={result.medium_cover_image}\r\n                                genres={result.genres} //추가해준다\r\n                                >\r\n  \r\n                            </Movie>\r\n                        })}\r\n                    </div>\r\n                    )\r\n                    }\r\n                </section>\r\n                )\r\n    }\r\n    \r\n\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nfunction About() {\r\n    return <span>어바웃페이지 리턴</span>\r\n}\r\n\r\nexport default About;","import React from 'react';\r\n//클래스 컴포넌트로 변환\r\n// function Detail(props) {\r\n//     console.log(props);\r\n//     return <span>sdfsdfsdfsdfsdf</span>;\r\n// }\r\n\r\n//링크를 이용하여 정보를 공유하는 방법 \r\nclass Detail extends React.Component {\r\n   \r\n    componentDidMount() {\r\n        //props가 전달하는 location, history객체를 받음\r\n        //console.log(this.props);\r\n        const { location, history } = this.props;\r\n        if(location.state === undefined) {\r\n            alert(\"정상적인 접근이 아닙니다\");\r\n            history.push(\"/\");\r\n        }\r\n    }\r\n    render() {\r\n        const {location} = this.props;\r\n        if(location.state !== undefined) {\r\n            return <span>{location.state.title}</span>;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default Detail;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Navigation() {\r\n    //a 태그일 경우 동작하지 않는다 (react-router-dom의 {Link}를 임포트 받는다)\r\n    return (<div>\r\n                {\r\n                //<a href=\"/\">홈으로</a>\r\n                //<a href=\"/about\">상세로</a>\r\n                }\r\n                <Link to={{pathname:\"/\"}}><button>홈으로</button></Link>\r\n                <Link to=\"/about\"><button>상세보기</button></Link>\r\n            </div>\r\n            );\r\n        /*            \r\n        <header>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"container\">\r\n                        <div className=\"navbar\">\r\n                            <div className=\"navbar-header\">\r\n                                <button type=\"button\" className=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\"#myNavbar\">\r\n                                    <span className=\"icon-bar\"></span>\r\n                                    <span className=\"icon-bar\"></span>\r\n                                    <span className=\"icon-bar\"></span>\r\n                                </button>\r\n                                <a className=\"navbar-brand\" href=\"\"><img width=\"30\" src=\"../../img/logo192.png\" alt=\"Brand\"/></a>\r\n                            </div>\r\n                            <div className=\"collapse navbar-collapse\" id=\"myNavbar\">\r\n                                <ul className=\"nav navbar-nav\">\r\n                                    <li className=\"active\">\r\n                                        <Link to={{pathname:\"/\"}}>Main</Link>\r\n                                    </li>\r\n                                    <li>\r\n                                        <Link to={{pathname:\"/about\"}}>자게</Link>\r\n                                    </li>\r\n                                    <li><a href=\"\">강의</a></li>\r\n                                </ul>\r\n                                <ul className=\"nav navbar-nav navbar-right\">\r\n                                    <li className=\"dropdown\">\r\n                                        <a className=\"dropdown-toggle\" data-toggle=\"dropdown\" href=\"#\">테스트\r\n                                            <span className=\"caret\"></span></a>\r\n                                        <ul className=\"dropdown-menu\">\r\n                                                                                    \r\n                                            <li><a href=\"\"><span className=\"glyphicon glyphicon-user\"></span>Join</a></li>\r\n                                            <li><a href=\"\"><span className=\"glyphicon glyphicon-log-in\"></span>Login</a></li>\r\n                                            <li><a href=\"\"><span className=\"glyphicon glyphicon-log-out\"></span>Logout</a></li>\r\n                                        </ul>\r\n                                    </li>\r\n                                </ul>\r\n\r\n                                <form className=\"navbar-form navbar-right\" action=\"\">\r\n                                    <div className=\"input-group\">\r\n                                        <input type=\"text\" className=\"form-control\" placeholder=\"Search\"/>\r\n                                        <div className=\"input-group-btn\">\r\n                                            \r\n                                            <button className=\"btn btn-primary\" type=\"submit\">\r\n                                                검색\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </header>\r\n        */\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\n\r\nimport {HashRouter, Route} from 'react-router-dom'; \r\n//import {BrowserRouter, Route} from 'react-router-dom'; //브라우저 라우터는 #이 사라진다(단 깃에서 배포시 문제가있음)\r\n\r\nimport Home from './routes/Home';\r\nimport About from './routes/About';\r\nimport Detail from './routes/Detail';\r\nimport Navigation from './component/Navigation';\r\n\r\n//라우터사용\r\nfunction App3() {\r\n    return (\r\n        //about요청이라면 About컴포넌트를 보여주세요\r\n        //path의 /에 대한 component를실행 후 /about의 component를 실행하게 되는데\r\n        //정확하게 해당 패스에만 실행하는 속성이 exact={true}\r\n        //Navigation은 반드시 Router안에 있어야 합니다\r\n        <HashRouter>\r\n            <Navigation /> {/*모든페이지에서 공통으로 사용하는 Component */}\r\n            <Route path=\"/\" exact={true} component={Home}></Route>\r\n            <Route path=\"/about\" component={About}></Route>\r\n            <Route path=\"/movie/:id\" component={Detail}></Route>\r\n        </HashRouter>\r\n        )\r\n}\r\n\r\nexport default App3;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\n//import App from './App';\r\n//import App1 from './App1';\r\n//import App2 from './App2';\r\nimport App3 from './App3';\r\n\r\n/*intex.html root부분의 App.js부분을 밀어넣는다*/\r\n/*render는 component HTML을 반환하는 함수이다(JSX는 자바스크립트안에 HTML을 의미한다)*/\r\n/*render는 단 한번에 하나의 component만 랜더링 할 수 있다*/\r\n//ReactDOM.render(<App />, document.getElementById('root'));\r\n//ReactDOM.render(<App1 />, document.getElementById('root'));\r\n//ReactDOM.render(<App2 />, document.getElementById(\"root\"));\r\nReactDOM.render(<App3 />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}